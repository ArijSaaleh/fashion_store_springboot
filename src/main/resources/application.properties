spring.application.name=fashionEcommerce
server.port=8080

spring.datasource.url=jdbc:postgresql://localhost:5432/fashiondb
spring.datasource.username=postgres
spring.datasource.password=0000

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.driver-class-name=org.postgresql.Driver

jwt.secret=cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e
jwt.expiration=3600000

spring.security.oauth2.redirectUri= "http://localhost:4200/auth/oauth2/success" # frontend handler

spring.security.oauth2.client.registration.google.client-id=""
spring.security.oauth2.client.registration.google.client-secret=

spring.security.oauth2.client.provider.google.issuer-uri= https://accounts.google.com




spring:
security:
oauth2:
client:
registration:
google:
client-id: YOUR_GOOGLE_CLIENT_ID
client-secret: YOUR_GOOGLE_CLIENT_SECRET
scope:
- openid
- profile
- email
provider:
google:
issuer-uri: https://accounts.google.com
